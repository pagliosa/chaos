reset()
source("~/Canon/R/utils.r")
reset()
a = random(10)
a = runif(10)
a
plot(a)
hist(a)
plot(a)
plot(a, "h")
plot(a, type = "h")
plot(a, type = "h")
lines(spline(a))
lines(spline(a, n = 2))
lines(spline(a, n = 3))
lines(spline(a, n = 4))
tmin <- as.Date("2000-01-01")
tmax <- as.Date("2001-01-01")
tlab <- seq(tmin, tmax, by="month")
lab <- format(tlab,format="%Y-%b")
set.seed(111)
x <- seq(tmin, tmax, , 100)
y <- cumsum(rnorm(100))
op <- par(mar=c(6,4,1,1))
plot(x, y, t="l", xaxt="n", xlab="")
axis(1, at=tlab, labels=FALSE)
text(x=tlab, y=par()$usr[3]-0.1*(par()$usr[4]-par()$usr[3]),
labels=lab, srt=45, adj=1, xpd=TRUE)
par(op)
dev.off()
op <- par(mar=c(6,4,1,1))
plot(x, y, t="l", xaxt="n", xlab="")
axis(1, at=tlab, labels=FALSE)
text(x=tlab, y=par()$usr[3]-0.1*(par()$usr[4]-par()$usr[3]),
labels=lab, srt=45, adj=1, xpd=TRUE)
par(op)
plot(x, y, t="l", xaxt="n", xlab="")
axis(1, at=tlab, labels=FALSE)
text(x=tlab, y=par()$usr[3]-0.1*(par()$usr[4]-par()$usr[3]), labels=lab, srt=45, adj=1, xpd=TRUE)
?text
?par
?par()
plot(x, y, t="l", xaxt="n", xlab="")
text(x=tlab, labels=lab, srt=45, adj=1, xpd=TRUE)
par()$usr
par()
par
?par()
filename = "./CNCD_dilmabr.dat.out"
data = read.table(filename)
tmsp = as.POSIXct(paste(data[,1]," ", data[,2], sep=""),format='%Y-%m-%d %H:%M:%S')
dataset = cbind(tmsp, data[,3])
plot(dataset[,2], t="l")
runif(2, 3, 100)
runif(10)
?runif
as.matrix(runif(10 * 2), ncol = 2)
matrix(runif(10 * 2), ncol = 2)
?apply
myPlot
source("~/Canon/R/utils.r")
myPlot
source('~/Canon/R/timeSeries.r')
reset()
source('~/Canon/R/timeSeries.r')
createRandonWalk(plot = T)
source('~/Canon/R/timeSeries.r')
createRandonWalk(plot = T)
source('~/Canon/R/timeSeries.r')
createRandonWalk()
source('~/Canon/R/timeSeries.r')
createRandonWalk()
source('~/Canon/R/timeSeries.r')
createRandonWalk()
source('~/Canon/R/timeSeries.r')
createRandonWalk()
?cex
?par
?plot
??pch
source('~/Canon/R/timeSeries.r')
createRandonWalk()
source('~/Canon/R/timeSeries.r')
createRandonWalk()
createRandonWalk()
source('~/Canon/R/timeSeries.r')
createRandonWalk()
createRandonWalk(nop = 2000)
createRandonWalk(nop = 2000, save = T)
a = createRandonWalk(nop = 2000, save = T)
a = createRandonWalk(nop = 2000, save = T)
a = createRandonWalk(nop = 2000, save = T)
lorenz.syst()
?lorenz.ts
lorenz.ts
plot(lorenz.ts)
lorenz(do.plot = T)
lorenz(do.plot = T)
a = lorenz(do.plot = T)
dim(a)
?lorenz
a$time
plot(a$x, a$y)
plot3d(a$x, a$y, a$z)
plot3d(a$x, a$z)
plot(a$x, a$z)
plot3d(a$x, a$y, a$z)
rgl.postscript("lorenz.pdf","pdf")
open3d()
plot3d(a$x, a$y, a$z)
rgl.postscript("lorenz.pdf","pdf")
open3d()
x <- sort(rnorm(1000))
y <- rnorm(1000)
z <- rnorm(1000) + atan2(x,y)
plot3d(x, y, z, col=rainbow(1000))
rgl.postscript("persp3dd.pdf","pdf")
plot3d(a$x, a$y, a$z)
rgl.snapshot(filename="mei11.png",fmt="pdf")
rgl.snapshot(filename="mei11.png",fmt="png")
browseURL(paste("file://", writeWebGL(dir=file.path(tempdir(), "webGL"), width=500), sep="")
)
plot3d(a$x, a$y, a$z)
browseURL(paste("file://", writeWebGL(dir=file.path(tempdir(), "webGL"), width=500), sep=""))
browseURL(paste("file://", writeWebGL(dir=file.path(tempdir(), "webGL"), width=500), sep=""))
plot(a$x, a$y, a$z)
plot(a$x, a$y)
scatterplot3d(a$x, a$y, a$z)
scatterplot3d(a$x, a$y, a$z, type = "s")
scatterplot3d(a$x, a$y, a$z, type = "l")
scatterplot3d(a$x, a$y, a$z, type = "b")
scatterplot3d(a$x, a$y, a$z, type = "l")
myPlot
savePDF
scatterplot3d(a$x, a$z, a$y, type = "l")
scatterplot3d(a$z, a$y, a$x, type = "l")
scatterplot3d(a$z, a$x, a$z, type = "l")
scatterplot3d(a$y, a$z, a$x, type = "l")
scatterplot3d(a$y, a$x, a$z, type = "l")
lorenz
length(seq(0, 50, by = 0.01))
a = lorenz(do.plot = F)
plot3d(a$x, a$y, a$z)
browseURL(paste("file://", writeWebGL(dir=file.path(tempdir(), "webGL"), width=500), sep="")
)
plot(a$x, a$y)
browseURL(paste("file://", writeWebGL(dir=file.path(tempdir(), "webGL"), width=500), sep=""))
browseURL(paste("file://", writeWebGL(dir=file.path(tempdir(), "webGL"), width=500), sep="")
)
reset()
source('~/Canon/R/timeSeries.r')
source('~/Canon/R/timeSeries.r')
a = createPendulum()
source('~/Canon/R/timeSeries.r')
a = createPendulum()
plot(a)
a
a$
as
head(a)
plot(a[,2])
plot(a[,2], a[,3])
source('~/Canon/R/timeSeries.r')
reset()
source('~/Canon/R/timeSeries.r')
a = createPendulum()
dim(a)
a
a[2:3,]
a[2,]
a[,2:3]
source('~/Canon/R/timeSeries.r')
a = createPendulum()
source('~/Canon/R/timeSeries.r')
a = createPendulum()
source('~/Canon/R/timeSeries.r')
a = createPendulum()
source('~/Canon/R/timeSeries.r')
a = createPendulum()
dim(a)
head(a)
source('~/Canon/R/timeSeries.r')
a = createPendulum()
source('~/Canon/R/timeSeries.r')
a = createPendulum()
a = createPendulum(max = 10)
a = createPendulum(max = 3)
f <- function(x, y) x^2 - y^2
xx <- c(-1, 1); yy <- c(-1, 1)
## Not run:
vectorfield(f, xx, yy, scale = 0.1)
for (xs in seq(-1, 1, by = 0.25)) {
sol <- rk4(f, -1, 1, xs, 100)
lines(sol$x, sol$y, col="darkgreen")
}
grid()
plot(1:5)
grid()
f <- function(x, y) x^2 - y^2
xx <- c(-1, 1); yy <- c(-1, 1)
vectorfield(f, xx, yy, scale = 0.1)
a
plot(a)
a = createPendulum(max = 0.1)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 0.1)
a = createPendulum(max = 1)
a = createPendulum(max = 1)
a = createPendulum(max = 0.1)
a = createPendulum(max = 0.01)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 0.01)
a = createPendulum(max = 1)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 1)
a = createPendulum(max = 10)
a = createPendulum(max = 0.1)
a = createPendulum(max = 0.4)
a = createPendulum(max = 0.5)
a = createPendulum(max = 0.9)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 0.9)
a = createPendulum(max = 1)
a = createPendulum(max = 10)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
a = createPendulum(max = 100)
a = createPendulum(max = 9)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 9)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 9)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 9)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 9)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 9)
reset()
a = createPendulum(max = 10)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
debugSource('~/Canon/R/timeSeries.r')
debugSource('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
debugSource('~/Canon/R/timeSeries.r')
debugSource('~/Canon/R/timeSeries.r')
source('~/Canon/R/timeSeries.r')
debugSource('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
reset()
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
reset()
a = createPendulum(max = 10)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 10)
a = createPendulum(max = 1)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 1)
head(a)
a = createPendulum(max = 10)
a = createPendulum(max = 0.1)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 0.1)
a = createPendulum(max = 1)
a = createPendulum(max = 10)
a = createPendulum(max = 2)
a = createPendulum(max = 3)
a = createPendulum(max = 4)
a = createPendulum(max = 5)
x <- 1:10
y <- c(0, 0, 1, 0, 1, 1, 0, 1, 1, 1)
plot(x, y)
abline(mod <- lm(y ~ x))
a = createPendulum(max = 10)
a = createPendulum(max = 1)
a = createPendulum(max = 0.1)
a = createPendulum(max = 0.2)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 0.2)
seq(0, 180, 30)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 0.2)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 0.2)
source('~/Canon/R/timeSeries.r')
a = createPendulum(max = 0.2)
reset()
source('~/Canon/R/timeSeries.r')
reset()
?embedd
embedd
?apply
?mapply
mapply(function(x, i, j), i + j)
mapply(rep, 1:4, 4:1)
apply(rep, 1:4, 4:1)
mapply(sum, 1:4, 4:1)
mapply(sum, 1:2, 3:5)
mapply(sum, 1:4)
mapply(sum, 1:4, 1)
mat <- matrix(c(1, 2, 3, 4), 2, 2)
mat
mapply(function(mat, i, j) {i + j})
a = 1:10
a
source('~/Canon/R/timeSeries.r')
source('~/Canon/R/timeSeries.r')
plot(createLorenzHand)
source('~/Canon/R/timeSeries.r')
createLorenzHand
createLorenzHand()
source('~/Canon/R/timeSeries.r')
createLorenzHand()
source('~/Canon/R/timeSeries.r')
createLorenzHand()
source('~/Canon/R/timeSeries.r')
createLorenzHand()
debugSource('~/Canon/R/timeSeries.r')
source('~/Canon/R/timeSeries.r')
debugSource('~/Canon/R/timeSeries.r')
debugSource('~/Canon/R/timeSeries.r')
debugSource('~/Canon/R/timeSeries.r')
